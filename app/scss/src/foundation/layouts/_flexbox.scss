// Variables
$flexbox-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
);

$grid-desktop-columns: 12;

//MIXINS

@mixin display($direction: center) {
  display: flex;
  align-items: $direction;
  justify-content: $direction;
}

@mixin align-items($value) {
  align-items: $value;
  -webkit-align-items: $value;
  -ms-flex-align: $value;
}

@mixin justify-content($position: center) {
  justify-content: $position;
  -ms-flex-pack: $position;
  -webkit-justify-content: $position;
}

@mixin flex($direction: center) {
  @include display($direction);
  @include align-items($direction);
  @include justify-content($direction);
}

.flex-center {
  @include flex(center);
}
.flex-start {
  @include flex(start);
}
.flex-end {
  @include flex(end);
}

@mixin flex-row($justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: row;
  justify-content: $justify;
  align-items: $align;
}

@mixin flex-col($justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: column;
  justify-content: $justify;
  align-items: $align;
}

@mixin flexMiddle {
  @include display(flex);
  @include box-pack(center);
  @include justify-content(center);
  @include box-align(center);
  @include align-items(center);
}

@mixin flexHorizontalJustify($flexWrap: nowrap) {
  @include display(flex);
  @include align-items(stretch);
  @include flex-direction(row);
  @include justify-content(space-between);
  @include flex-wrap($flexWrap);
}

@mixin flexCenterContent($flexWrap: nowrap) {
  @include display(flex);
  @include box-pack(center);
  @include justify-content(center);
  @include box-align(center);
  @include align-items(center);
  @include flex-wrap($flexWrap);
}

@mixin flexLeftTop {
  @include display(flex);
  @include align-items(flex-start);
  @include flex-direction(row);
  @include justify-content(flex-start);
}

@mixin flexLeftMiddle {
  @include display(flex);
  @include align-items(center);
  @include flex-direction(row);
  @include justify-content(flex-start);
}

@mixin flexRightMiddle {
  @include display(flex);
  @include align-items(center);
  @include flex-direction(row);
  @include justify-content(flex-end);
}

@mixin flex-order($order) {
  -webkit-box-ordinal-group: $order; // old
  -moz-box-ordinal-group: $order; // old
  -ms-flex-order: $order; // ie
  -webkit-order: $order; // new
  order: $order; // new
}
@mixin vertical-align {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

// @mixin box-align
@mixin box-align($align: center) {
  -webkit-box-align: $align;
  -moz-box-align: $align;
  -ms-box-align: $align;
  box-align: $align;
}

// @mixin display
@mixin display($display: flex) {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// @mixin box-pack
@mixin box-pack($pack: center) {
  -webkit-box-pack: $pack;
  -moz-box-pack: $pack;
  -ms-box-pack: $pack;
  box-pack: $pack;
}

// @mixin flex-direction
@mixin flex-direction($direction: row) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

@mixin flex-wrap($value: nowrap) {
  flex-wrap: $value;
}

@mixin box-flex($value: 0 1 auto) {
  flex: $value;
}

@mixin box-align($value: stretch) {
  align-items: $value;
}

@mixin box-pack($value: start) {
  justify-content: $value;
}

@mixin flexbox(
  $display: flex,
  $direction: row,
  $wrap: nowrap,
  $align: stretch,
  $pack: start,
  $flex: 0 1 auto
) {
  @include display($display);
  @include flex-direction($direction);
  @include flex-wrap($wrap);
  @include box-flex($flex);
  @include box-align($align);
  @include box-pack($pack);
}

// Flexbox Mixins

@mixin flex-container {
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

@mixin flex-row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

@mixin flex-col($size) {
  // flex: 0 0 percentage($size / $grid-desktop-columns);
  // max-width: percentage($size / $grid-desktop-columns);
  padding-left: 15px;
  padding-right: 15px;
  position: relative;
  width: 100%;
}

@mixin flex-col-auto {
  flex: 0 0 auto;
  width: auto;
}

@mixin flex-col-offset($size) {
  margin-left: percentage($size / 12);
}

// Utility Mixins

@mixin flex-visible {
  display: flex !important;
}

@mixin flex-hidden {
  display: none !important;
}

@mixin flex-align-items($alignment) {
  align-items: $alignment;
}

@mixin flex-align-self($alignment) {
  align-self: $alignment;
}

// Add these mixins in the appropriate places in your existing code, and you should have a more complete set of mixins for your flexbox configuration.

//@include transition(color .3s ease, font-size .5s ease);

// Other Flexbox mixins, such as "flexbox", "inline-flex", "flex-direction", "flex-wrap", "flex-flow", "order", "flex-grow", "flex-shrink", "flex-basis", "flex", "justify-content", "align-items", "align-self", and "align-content" are already included in the provided code.
