@import './grid';

// Variables
$grid-columns: 12;
$grid-gutter-width: 30px;
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
);

// Grid classes
.grid {
  // Containers
  &__container {
    @include grid__container();
  }

  // Rows
  &__row {
    @include grid__row;
    background-color: #333;
  }
 

  @each $breakpoint, $breakpoint-value in $grid-breakpoints {
    @media (min-width: $breakpoint-value) {
      // Containers
      &__container--#{$breakpoint} {
        @include grid__container();
      }

      // Rows
      &__row--#{$breakpoint} {
        @include grid__row;
      }

      &__row--reverse-#{$breakpoint} {
        flex-direction: row-reverse;
      }

      // Columns
      @for $i from 1 through $grid-columns {
        &__col-#{$breakpoint}-#{$i} {
          @include grid__col($breakpoint, $i);
        }
      }

      // Column offsets
    // Generate column offset classes
@for $i from 1 through 11 {
  .grid__col-xs-offset-#{$i} {
    @include grid__col-offset(xs, percentage($i / 12));
  }
  .grid__col-sm-offset-#{$i} {
    @include grid__col-offset(sm, percentage($i / 12));
  }
  .grid__col-md-offset-#{$i} {
    @include grid__col-offset(md, percentage($i / 12));
  }
  .grid__col-lg-offset-#{$i} {
    @include grid__col-offset(lg, percentage($i / 12));
  }
  .grid__col-xl-offset-#{$i} {
    @include grid__col-offset(xl, percentage($i / 12));
  }
}

      // Auto width columns
      &__col-#{$breakpoint}-auto {
        @include grid__col-auto;
      }

      // Visibility classes
      &__visible-#{$breakpoint} {
        display: block;
      }

      &__hidden-#{$breakpoint} {
        display: none;
      }

      // Align-items classes
      &__align-items-top-#{$breakpoint} {
        align-items: flex-start;
      }

      &__align-items-middle-#{$breakpoint} {
        align-items: center;
      }

      &__align-items-bottom-#{$breakpoint} {
        align-items: flex-end;
      }

      // Align-self classes
      &__align-self-top-#{$breakpoint} {
        align-self: flex-start;
      }

      &__align-self-middle-#{$breakpoint} {
        align-self: center;
      }

      &__align-self-bottom-#{$breakpoint} {
        align-self: flex-end;
      }
    }
  }
}


// CLASSES
.grid {
    @include grid-base($desk-grid-width);
    @media screen and (max-width: $grid-tablet-breakpoint) {
      width: $tab-grid-width;
    }
    @media screen and (max-width: $grid-mobile-breakpoint) {
      width: $mob-grid-width;
    }
    &-0 {
      @include grid-base(100%);
    }
  }
  
  .col {
    @include columns-loop(desk, $grid-desktop-columns, $desk-gutter);
    @media screen and (max-width: $grid-tablet-breakpoint) {
      @include columns-loop(tab, $grid-tablet-columns, $tab-gutter);
    }
    @media screen and (max-width: $grid-mobile-breakpoint) {
      @include columns-loop(mob, $grid-mobile-columns, $mob-gutter);
    }
  }

  #grid-small {
    height: 200px;
   
    grid-template-areas: buildGrid(5,5);
    width: 200px;

  }
  
  #grid-large {
    grid-template-areas: buildGrid(25,25);
  }
